from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.enums import ParseMode

from punq import Container

from infrastructure.database.connection import session_scope
from infrastructure.database.repositories.user_repository import UserRepository


def register_start_handler(router: Router, container: Container):
    """Register start command handler"""

    @router.message(Command("start"))
    async def start_command(message: Message) -> None:
        """Handle /start command.
        –ü—Ä–∞–≤–∏–ª–æ –¥–æ—Å—Ç—É–ø–∞: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î (users), –±–æ—Ç –º–æ–ª—á–∏—Ç.
        –ï—Å–ª–∏ –µ—Å—Ç—å ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.
        """
        tg_id = message.from_user.id

        with session_scope() as s:
            users = UserRepository(s)
            user = users.get_by_tg_id(tg_id)
            if user is None:
                # –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º
                return

        welcome_text = (
            f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
            "ü§ñ –Ø MyVibe Bot - —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã!\n\n"
            "üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
            "/access - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º (admin)\n\n"
            "‚ú® –ò—Å–ø–æ–ª—å–∑—É—é aiogram + punq DI + SQLAlchemy!"
        )
        await message.answer(welcome_text, parse_mode=ParseMode.HTML)
